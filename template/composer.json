{
    "name": "{{ lower Vendor }}/{{ kebabcase PackageName }}",
    "type": "library",
    "description": "A {{ PackageName }} package.",
    "keywords": [
        "package",
        "{{ PackageName }}",
        "symfony",
        "bundle",
        "symfony-bundle"
    ],
    "license": "MIT",
    "require": {
        "php": ">=8.3"
    },
    "require-dev": {
        "ext-xdebug": "*",
        "ilyes512/code-style": "1.0.0-alpha.2",
        "mockery/mockery": "^1.5.0",
        "overtrue/phplint": "^9.0.4",
        "phpstan/phpstan": "^1.5.2",
        "phpstan/phpstan-mockery": "^1.1.0",
        "phpunit/phpunit": "^10.5",
        "symfony/http-kernel": "^7.0",
        "symfony/var-dumper": "^7.0"
    },
    "autoload": {
        "psr-4": {
            "{{ camelcase (snakecase Vendor) }}\\{{ camelcase (snakecase PackageName) }}Bundle\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "{{ camelcase (snakecase Vendor) }}\\{{ camelcase (snakecase PackageName) }}Bundle\\Tests\\": "tests"
        }
    },
    "scripts": {
        "lint": "XDEBUG_MODE=off phplint --exclude=vendor .",
        "checkstyle": "XDEBUG_MODE=off ecs check",
        "fixstyle": "XDEBUG_MODE=off ecs check --fix",
        "checktype": "XDEBUG_MODE=off phpstan analyse",
        "test": "XDEBUG_MODE=off phpunit --testdox",
        "xtest": "XDEBUG_MODE=develop,debug XDEBUG_SESSION=1 phpunit",
        "report": "XDEBUG_MODE=coverage phpunit --testdox --coverage-text --coverage-html coverage/html",
        "outdatedvendor": "XDEBUG_MODE=off composer outdated --direct",
        "checkall": [
            "@lint",
            "@checkstyle",
            "@checktype",
            "@test",
            "@outdatedvendor --minor-only --strict",
            "@outdatedvendor"
        ]
    },
    "scripts-descriptions": {
        "lint": "Check all php files for syntax errors.",
        "checkstyle": "Report on code style violations (without fixing it).",
        "fixstyle": "Fixes code style violations.",
        "checkall": "Run all code checkers (lint, checkstyle, outdated, ...).",

        DO THE REST
    },
    "extra": {
        "branch-alias": {
            "dev-main": "1.0-dev"
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true,
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    }
}
